// gradle自身配置，比如各种gradle插件
buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
    }
    // 插件的仓库
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

// 所有项目配置信息
allprojects {
    group 'cn.binux'
    version '1.0.0'
    ext {
        springCloudVersion = 'Dalston.RELEASE'
        springBootVersion = '1.5.3.RELEASE'
        springBootMyBatisVersion = '1.2.0'
    }
    ext.springBootpagehelperVersion = '1.1.0'
    ext.springBootAdminVersion = '1.5.0'
    ext.springBootDruidVersion = '1.1.10'
    ext.springBootRedisVersion = '1.5.3.RELEASE'
    ext.junitVersion = "4.12"
    ext.mysqlVersion = "5.1.32"
    ext.jacksonVersion = "2.8.7"
    ext.httpclientVersion = "4.3.5"
    ext.servletapiVersion = "3.1.0"
    ext.commonslangVersion = "2.6"
    ext.commonslang3Version = "3.3.2"
    ext.commonsioVersion = "1.3.2"
    ext.commonsnetVersion = "3.3"
    ext.jsqlparserVersion = "4.12"
    ext.slf4jVersion = "1.7.2"
    ext.commonsfileuploadVersion = "1.3.1"
    ext.jedisVersion = "2.7.2"
    ext.solrjVersion = "5.4.0"
    ext.freemarkerVersion = "2.3.23"
    ext.quartzVersion = "2.2.2"
    ext.fastjsonVersion = "1.2.28"
    ext.swagger2Version = "2.6.1"
    ext.lombokVersion = "1.16.16"
    ext.fastdfsVersion = "1.27.0.0"
    ext.beetl_starterVersion = "0.0.3"
    ext.hutoolVersion = "3.0.3"
    ext.swagger2Version = "2.6.1"
    ext.logbackkafkaVersion = "0.1.0"
    ext.apolloclientVersion = "1.4.0"

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'docker'
    apply plugin: 'org.springframework.boot'

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        if (!(name.contains('common'))) {
            testCompile("org.springframework.boot:spring-boot-starter-test")
            testCompile("junit:junit:${junitVersion}")
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

}

subprojects {
    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }
            resources {
                srcDir 'src/main/java'
                srcDir 'src/main/resources'
            }
        }
    }
    bootRepackage.enabled = false
}

